// Auto-generated SysML v2 Monaco language helpers based on the org.omg.sysml.xtext pilot implementation.
// The keyword/operator inventory comes from the InternalSysML.tokens table shipped in the pilot jars.

export const sysmlKeywords = [
  'about',
  'abstract',
  'accept',
  'action',
  'actor',
  'after',
  'alias',
  'all',
  'allocate',
  'allocation',
  'analysis',
  'and',
  'as',
  'assert',
  'assign',
  'assume',
  'at',
  'attribute',
  'bind',
  'binding',
  'by',
  'calc',
  'case',
  'comment',
  'concern',
  'connect',
  'connection',
  'constant',
  'constraint',
  'crosses',
  'decide',
  'def',
  'default',
  'defined',
  'dependency',
  'derived',
  'do',
  'doc',
  'else',
  'end',
  'entry',
  'enum',
  'event',
  'exhibit',
  'exit',
  'expose',
  'false',
  'filter',
  'first',
  'flow',
  'for',
  'fork',
  'frame',
  'from',
  'hastype',
  'if',
  'implies',
  'import',
  'in',
  'include',
  'individual',
  'inout',
  'interface',
  'istype',
  'item',
  'join',
  'language',
  'library',
  'locale',
  'loop',
  'merge',
  'message',
  'meta',
  'metadata',
  'new',
  'nonunique',
  'not',
  'null',
  'objective',
  'occurrence',
  'of',
  'or',
  'ordered',
  'out',
  'package',
  'parallel',
  'part',
  'perform',
  'port',
  'private',
  'protected',
  'public',
  'redefines',
  'ref',
  'references',
  'render',
  'rendering',
  'rep',
  'require',
  'requirement',
  'return',
  'satisfy',
  'send',
  'snapshot',
  'specializes',
  'stakeholder',
  'standard',
  'state',
  'subject',
  'subsets',
  'succession',
  'terminate',
  'then',
  'timeslice',
  'to',
  'transition',
  'true',
  'until',
  'use',
  'variant',
  'variation',
  'verification',
  'verify',
  'via',
  'view',
  'viewpoint',
  'when',
  'while',
  'xor',
] as const;

export const sysmlOperators = [
  '!=',
  '!==',
  '#',
  '$',
  '%',
  '&',
  '(',
  ')',
  '*',
  '**',
  '+',
  ',',
  '-',
  '->',
  '.',
  '..',
  '.?',
  '/',
  ':',
  '::',
  '::>',
  ':=',
  ':>',
  ':>>',
  ';',
  '<',
  '<=',
  '=',
  '==',
  '===',
  '=>',
  '>',
  '>=',
  '?',
  '??',
  '@',
  '@@',
  '[',
  ']',
  '^',
  '{',
  '|',
  '}',
  '~',
] as const;

export const sysmlLanguageConfiguration = {
  comments: {
    lineComment: '//',
    blockComment: ['/*', '*/'],
  },
  brackets: [
    ['{', '}'],
    ['[', ']'],
    ['(', ')'],
    ['<', '>'],
  ],
  autoClosingPairs: [
    { open: '{', close: '}' },
    { open: '[', close: ']' },
    { open: '(', close: ')' },
    { open: '<', close: '>' },
    { open: '"', close: '"', notIn: ['string'] },
    { open: "'", close: "'", notIn: ['string', 'comment'] },
    { open: '/*', close: '*/', notIn: ['string'] },
  ],
  surroundingPairs: [
    { open: '{', close: '}' },
    { open: '[', close: ']' },
    { open: '(', close: ')' },
    { open: '<', close: '>' },
    { open: '"', close: '"' },
    { open: "'", close: "'" },
  ],
} as const;

export const sysmlMonarchLanguage = {
  defaultToken: 'identifier',
  tokenPostfix: '.sysml',
  ignoreCase: false,
  keywords: sysmlKeywords,
  operators: sysmlOperators,
  symbols: /[!#$%&*+\\-=?@^|~:<>.]+/,
  brackets: [
    { open: '{', close: '}', token: 'delimiter.curly' },
    { open: '[', close: ']', token: 'delimiter.bracket' },
    { open: '(', close: ')', token: 'delimiter.parenthesis' },
    { open: '<', close: '>', token: 'delimiter.angle' },
  ],
  tokenizer: {
    root: [
      { include: '@whitespace' },
      { include: '@numbers' },
      { include: '@strings' },
      [/[#@][a-zA-Z_][\\w:]*\\b/, 'annotation'],
      [/[_a-zA-Z][\\w]*/, {
        cases: {
          '@keywords': 'keyword',
          '@default': 'identifier',
        },
      }],
      [/[<>{}\\[\\]()]/, '@brackets'],
      [/@symbols/, {
        cases: {
          '@operators': 'operator',
          '@default': 'delimiter',
        },
      }],
    ],

    whitespace: [
      [/[ \t\r\n]+/, 'white'],
      [/\/\*/, 'comment', '@comment'],
      [/\/\/.*$/, 'comment'],
    ],

    comment: [
      [/[^\/*]+/, 'comment'],
      [/\*\//, 'comment', '@pop'],
      [/[*\/]/, 'comment'],
    ],

    numbers: [
      [/0[xX][0-9a-fA-F]+\\b/, 'number.hex'],
      [/\d+\.\d*([eE][\-+]?\d+)?\\b/, 'number.float'],
      [/\d*\.\d+([eE][\-+]?\d+)?\\b/, 'number.float'],
      [/\d+([eE][\-+]?\d+)?\\b/, 'number'],
    ],

    strings: [
      [/"/, 'string', '@dstring'],
      [/'/, 'string', '@sstring'],
    ],

    dstring: [
      [/[^\\"\n]+/, 'string'],
      [/\\./, 'string.escape'],
      [/"/, 'string', '@pop'],
      [/\\$/, 'string'],
    ],

    sstring: [
      [/[^\\'\n]+/, 'string'],
      [/\\./, 'string.escape'],
      [/'/, 'string', '@pop'],
      [/\\$/, 'string'],
    ],
  },
} as const;

export type SysMLCompletionKind = 'keyword' | 'operator';

export interface SysMLCompletionItem {
  readonly label: string;
  readonly insertText: string;
  readonly kind: SysMLCompletionKind;
  readonly detail?: string;
  readonly documentation?: string;
  readonly sortText?: string;
  readonly filterText?: string;
}

const keywordCompletionDetail = 'SysML v2 keyword';
const operatorCompletionDetail = 'SysML v2 operator or punctuation';

export const sysmlCompletionItems: readonly SysMLCompletionItem[] = [
  { label: 'about', insertText: 'about', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_about', filterText: 'about' },
  { label: 'abstract', insertText: 'abstract', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_abstract', filterText: 'abstract' },
  { label: 'accept', insertText: 'accept', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_accept', filterText: 'accept' },
  { label: 'action', insertText: 'action', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_action', filterText: 'action' },
  { label: 'actor', insertText: 'actor', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_actor', filterText: 'actor' },
  { label: 'after', insertText: 'after', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_after', filterText: 'after' },
  { label: 'alias', insertText: 'alias', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_alias', filterText: 'alias' },
  { label: 'all', insertText: 'all', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_all', filterText: 'all' },
  { label: 'allocate', insertText: 'allocate', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_allocate', filterText: 'allocate' },
  { label: 'allocation', insertText: 'allocation', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_allocation', filterText: 'allocation' },
  { label: 'analysis', insertText: 'analysis', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_analysis', filterText: 'analysis' },
  { label: 'and', insertText: 'and', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_and', filterText: 'and' },
  { label: 'as', insertText: 'as', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_as', filterText: 'as' },
  { label: 'assert', insertText: 'assert', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_assert', filterText: 'assert' },
  { label: 'assign', insertText: 'assign', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_assign', filterText: 'assign' },
  { label: 'assume', insertText: 'assume', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_assume', filterText: 'assume' },
  { label: 'at', insertText: 'at', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_at', filterText: 'at' },
  { label: 'attribute', insertText: 'attribute', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_attribute', filterText: 'attribute' },
  { label: 'bind', insertText: 'bind', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_bind', filterText: 'bind' },
  { label: 'binding', insertText: 'binding', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_binding', filterText: 'binding' },
  { label: 'by', insertText: 'by', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_by', filterText: 'by' },
  { label: 'calc', insertText: 'calc', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_calc', filterText: 'calc' },
  { label: 'case', insertText: 'case', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_case', filterText: 'case' },
  { label: 'comment', insertText: 'comment', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_comment', filterText: 'comment' },
  { label: 'concern', insertText: 'concern', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_concern', filterText: 'concern' },
  { label: 'connect', insertText: 'connect', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_connect', filterText: 'connect' },
  { label: 'connection', insertText: 'connection', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_connection', filterText: 'connection' },
  { label: 'constant', insertText: 'constant', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_constant', filterText: 'constant' },
  { label: 'constraint', insertText: 'constraint', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_constraint', filterText: 'constraint' },
  { label: 'crosses', insertText: 'crosses', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_crosses', filterText: 'crosses' },
  { label: 'decide', insertText: 'decide', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_decide', filterText: 'decide' },
  { label: 'def', insertText: 'def', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_def', filterText: 'def' },
  { label: 'default', insertText: 'default', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_default', filterText: 'default' },
  { label: 'defined', insertText: 'defined', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_defined', filterText: 'defined' },
  { label: 'dependency', insertText: 'dependency', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_dependency', filterText: 'dependency' },
  { label: 'derived', insertText: 'derived', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_derived', filterText: 'derived' },
  { label: 'do', insertText: 'do', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_do', filterText: 'do' },
  { label: 'doc', insertText: 'doc', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_doc', filterText: 'doc' },
  { label: 'else', insertText: 'else', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_else', filterText: 'else' },
  { label: 'end', insertText: 'end', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_end', filterText: 'end' },
  { label: 'entry', insertText: 'entry', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_entry', filterText: 'entry' },
  { label: 'enum', insertText: 'enum', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_enum', filterText: 'enum' },
  { label: 'event', insertText: 'event', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_event', filterText: 'event' },
  { label: 'exhibit', insertText: 'exhibit', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_exhibit', filterText: 'exhibit' },
  { label: 'exit', insertText: 'exit', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_exit', filterText: 'exit' },
  { label: 'expose', insertText: 'expose', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_expose', filterText: 'expose' },
  { label: 'false', insertText: 'false', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_false', filterText: 'false' },
  { label: 'filter', insertText: 'filter', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_filter', filterText: 'filter' },
  { label: 'first', insertText: 'first', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_first', filterText: 'first' },
  { label: 'flow', insertText: 'flow', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_flow', filterText: 'flow' },
  { label: 'for', insertText: 'for', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_for', filterText: 'for' },
  { label: 'fork', insertText: 'fork', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_fork', filterText: 'fork' },
  { label: 'frame', insertText: 'frame', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_frame', filterText: 'frame' },
  { label: 'from', insertText: 'from', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_from', filterText: 'from' },
  { label: 'hastype', insertText: 'hastype', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_hastype', filterText: 'hastype' },
  { label: 'if', insertText: 'if', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_if', filterText: 'if' },
  { label: 'implies', insertText: 'implies', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_implies', filterText: 'implies' },
  { label: 'import', insertText: 'import', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_import', filterText: 'import' },
  { label: 'in', insertText: 'in', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_in', filterText: 'in' },
  { label: 'include', insertText: 'include', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_include', filterText: 'include' },
  { label: 'individual', insertText: 'individual', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_individual', filterText: 'individual' },
  { label: 'inout', insertText: 'inout', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_inout', filterText: 'inout' },
  { label: 'interface', insertText: 'interface', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_interface', filterText: 'interface' },
  { label: 'istype', insertText: 'istype', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_istype', filterText: 'istype' },
  { label: 'item', insertText: 'item', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_item', filterText: 'item' },
  { label: 'join', insertText: 'join', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_join', filterText: 'join' },
  { label: 'language', insertText: 'language', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_language', filterText: 'language' },
  { label: 'library', insertText: 'library', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_library', filterText: 'library' },
  { label: 'locale', insertText: 'locale', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_locale', filterText: 'locale' },
  { label: 'loop', insertText: 'loop', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_loop', filterText: 'loop' },
  { label: 'merge', insertText: 'merge', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_merge', filterText: 'merge' },
  { label: 'message', insertText: 'message', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_message', filterText: 'message' },
  { label: 'meta', insertText: 'meta', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_meta', filterText: 'meta' },
  { label: 'metadata', insertText: 'metadata', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_metadata', filterText: 'metadata' },
  { label: 'new', insertText: 'new', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_new', filterText: 'new' },
  { label: 'nonunique', insertText: 'nonunique', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_nonunique', filterText: 'nonunique' },
  { label: 'not', insertText: 'not', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_not', filterText: 'not' },
  { label: 'null', insertText: 'null', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_null', filterText: 'null' },
  { label: 'objective', insertText: 'objective', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_objective', filterText: 'objective' },
  { label: 'occurrence', insertText: 'occurrence', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_occurrence', filterText: 'occurrence' },
  { label: 'of', insertText: 'of', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_of', filterText: 'of' },
  { label: 'or', insertText: 'or', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_or', filterText: 'or' },
  { label: 'ordered', insertText: 'ordered', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_ordered', filterText: 'ordered' },
  { label: 'out', insertText: 'out', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_out', filterText: 'out' },
  { label: 'package', insertText: 'package', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_package', filterText: 'package' },
  { label: 'parallel', insertText: 'parallel', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_parallel', filterText: 'parallel' },
  { label: 'part', insertText: 'part', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_part', filterText: 'part' },
  { label: 'perform', insertText: 'perform', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_perform', filterText: 'perform' },
  { label: 'port', insertText: 'port', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_port', filterText: 'port' },
  { label: 'private', insertText: 'private', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_private', filterText: 'private' },
  { label: 'protected', insertText: 'protected', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_protected', filterText: 'protected' },
  { label: 'public', insertText: 'public', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_public', filterText: 'public' },
  { label: 'redefines', insertText: 'redefines', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_redefines', filterText: 'redefines' },
  { label: 'ref', insertText: 'ref', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_ref', filterText: 'ref' },
  { label: 'references', insertText: 'references', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_references', filterText: 'references' },
  { label: 'render', insertText: 'render', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_render', filterText: 'render' },
  { label: 'rendering', insertText: 'rendering', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_rendering', filterText: 'rendering' },
  { label: 'rep', insertText: 'rep', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_rep', filterText: 'rep' },
  { label: 'require', insertText: 'require', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_require', filterText: 'require' },
  { label: 'requirement', insertText: 'requirement', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_requirement', filterText: 'requirement' },
  { label: 'return', insertText: 'return', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_return', filterText: 'return' },
  { label: 'satisfy', insertText: 'satisfy', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_satisfy', filterText: 'satisfy' },
  { label: 'send', insertText: 'send', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_send', filterText: 'send' },
  { label: 'snapshot', insertText: 'snapshot', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_snapshot', filterText: 'snapshot' },
  { label: 'specializes', insertText: 'specializes', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_specializes', filterText: 'specializes' },
  { label: 'stakeholder', insertText: 'stakeholder', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_stakeholder', filterText: 'stakeholder' },
  { label: 'standard', insertText: 'standard', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_standard', filterText: 'standard' },
  { label: 'state', insertText: 'state', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_state', filterText: 'state' },
  { label: 'subject', insertText: 'subject', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_subject', filterText: 'subject' },
  { label: 'subsets', insertText: 'subsets', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_subsets', filterText: 'subsets' },
  { label: 'succession', insertText: 'succession', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_succession', filterText: 'succession' },
  { label: 'terminate', insertText: 'terminate', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_terminate', filterText: 'terminate' },
  { label: 'then', insertText: 'then', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_then', filterText: 'then' },
  { label: 'timeslice', insertText: 'timeslice', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_timeslice', filterText: 'timeslice' },
  { label: 'to', insertText: 'to', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_to', filterText: 'to' },
  { label: 'transition', insertText: 'transition', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_transition', filterText: 'transition' },
  { label: 'true', insertText: 'true', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_true', filterText: 'true' },
  { label: 'until', insertText: 'until', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_until', filterText: 'until' },
  { label: 'use', insertText: 'use', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_use', filterText: 'use' },
  { label: 'variant', insertText: 'variant', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_variant', filterText: 'variant' },
  { label: 'variation', insertText: 'variation', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_variation', filterText: 'variation' },
  { label: 'verification', insertText: 'verification', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_verification', filterText: 'verification' },
  { label: 'verify', insertText: 'verify', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_verify', filterText: 'verify' },
  { label: 'via', insertText: 'via', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_via', filterText: 'via' },
  { label: 'view', insertText: 'view', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_view', filterText: 'view' },
  { label: 'viewpoint', insertText: 'viewpoint', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_viewpoint', filterText: 'viewpoint' },
  { label: 'when', insertText: 'when', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_when', filterText: 'when' },
  { label: 'while', insertText: 'while', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_while', filterText: 'while' },
  { label: 'xor', insertText: 'xor', kind: 'keyword' as const, detail: keywordCompletionDetail, sortText: '0_xor', filterText: 'xor' },
  { label: '!=', insertText: '!=', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_!=', filterText: '!=' },
  { label: '!==', insertText: '!==', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_!==', filterText: '!==' },
  { label: '#', insertText: '#', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_#', filterText: '#' },
  { label: '$', insertText: '$', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_$', filterText: '$' },
  { label: '%', insertText: '%', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_%', filterText: '%' },
  { label: '&', insertText: '&', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_&', filterText: '&' },
  { label: '(', insertText: '(', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_(', filterText: '(' },
  { label: ')', insertText: ')', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_)', filterText: ')' },
  { label: '*', insertText: '*', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_*', filterText: '*' },
  { label: '**', insertText: '**', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_**', filterText: '**' },
  { label: '+', insertText: '+', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_+', filterText: '+' },
  { label: ',', insertText: ',', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_,', filterText: ',' },
  { label: '-', insertText: '-', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_-', filterText: '-' },
  { label: '->', insertText: '->', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_->', filterText: '->' },
  { label: '.', insertText: '.', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_.', filterText: '.' },
  { label: '..', insertText: '..', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_..', filterText: '..' },
  { label: '.?', insertText: '.?', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_.?', filterText: '.?' },
  { label: '/', insertText: '/', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_/', filterText: '/' },
  { label: ':', insertText: ':', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_:', filterText: ':' },
  { label: '::', insertText: '::', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_::', filterText: '::' },
  { label: '::>', insertText: '::>', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_::>', filterText: '::>' },
  { label: ':=', insertText: ':=', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_:=', filterText: ':=' },
  { label: ':>', insertText: ':>', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_:>', filterText: ':>' },
  { label: ':>>', insertText: ':>>', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_:>>', filterText: ':>>' },
  { label: ';', insertText: ';', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_;', filterText: ';' },
  { label: '<', insertText: '<', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_<', filterText: '<' },
  { label: '<=', insertText: '<=', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_<=', filterText: '<=' },
  { label: '=', insertText: '=', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_=', filterText: '=' },
  { label: '==', insertText: '==', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_==', filterText: '==' },
  { label: '===', insertText: '===', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_===', filterText: '===' },
  { label: '=>', insertText: '=>', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_=>', filterText: '=>' },
  { label: '>', insertText: '>', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_>', filterText: '>' },
  { label: '>=', insertText: '>=', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_>=', filterText: '>=' },
  { label: '?', insertText: '?', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_?', filterText: '?' },
  { label: '??', insertText: '??', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_??', filterText: '??' },
  { label: '@', insertText: '@', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_@', filterText: '@' },
  { label: '@@', insertText: '@@', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_@@', filterText: '@@' },
  { label: '[', insertText: '[', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_[', filterText: '[' },
  { label: ']', insertText: ']', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_]', filterText: ']' },
  { label: '^', insertText: '^', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_^', filterText: '^' },
  { label: '{', insertText: '{', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_{', filterText: '{' },
  { label: '|', insertText: '|', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_|', filterText: '|' },
  { label: '}', insertText: '}', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_}', filterText: '}' },
  { label: '~', insertText: '~', kind: 'operator' as const, detail: operatorCompletionDetail, sortText: '1_~', filterText: '~' },
] as const;

export function createMonacoCompletions(monaco: {
  languages: {
    CompletionItemKind: {
      Keyword: number;
      Operator: number;
    };
  };
}) {
  return sysmlCompletionItems.map((item) => ({
    label: item.label,
    insertText: item.insertText,
    kind: item.kind === 'keyword'
      ? monaco.languages.CompletionItemKind.Keyword
      : monaco.languages.CompletionItemKind.Operator,
    detail: item.detail,
    documentation: item.documentation,
    sortText: item.sortText,
    filterText: item.filterText,
  }));
}
